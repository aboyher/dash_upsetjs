{
  "src/lib/components/UpsetJS.react.js": {
    "description": "ExampleComponent is an example component.\r\nIt takes a property, `label`, and\r\ndisplays it.\r\nIt renders an input with the property `value`\r\nwhich is editable by the user.",
    "displayName": "UpsetJS",
    "methods": [
      {
        "name": "setSelection",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "selection",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderPlot",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "up",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "id for dash component"
      },
      "data": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "name": {
                "name": "string",
                "required": true
              },
              "sets": {
                "name": "arrayOf",
                "value": {
                  "name": "string"
                },
                "required": true
              }
            }
          }
        },
        "required": false,
        "description": "data. An array of dictionaries with keys name and sets, where name is a string and sets is a list. Example:\r\ndf = pd.DataFrame(data={'name': [1,2], 'sets': [3,4]})\r\ndata = df.to_dict('records')",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "selection": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "prop for hovering or selecting from the upsetplot"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "function to change props to send back to dash"
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "width of the div wrapper",
        "defaultValue": {
          "value": "800",
          "computed": false
        }
      },
      "height": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "height of the div wrapper",
        "defaultValue": {
          "value": "500",
          "computed": false
        }
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "title of the upset plot",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "built in theme for the upset plot, options are dark, light, vega",
        "defaultValue": {
          "value": "\"light\"",
          "computed": false
        }
      },
      "interaction": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "toggle for switching between click and hover events. there might be a way to hover and click at the same time, but i don't know how yet",
        "defaultValue": {
          "value": "\"hover\"",
          "computed": false
        }
      },
      "setName": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "axis label for sets",
        "defaultValue": {
          "value": "\"Intersection Size\"",
          "computed": false
        }
      },
      "setLabelSize": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "font size for set names",
        "defaultValue": {
          "value": "\"10px\"",
          "computed": false
        }
      },
      "combinationName": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "axis label for combinations"
      },
      "colors": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Set and combination colors. \r\nLength does not have to match sets or combinations(intersections). \r\nIf shorter than sets or combinations it will loop.\r\nColors are added after sorting, So largest set/intersection will get the first color.\r\n Must be a list of html/css interpretable values. \r\nFor example:\r\n ['rgb(121, 130, 52)','rgb(163, 173, 98)','rgb(208, 211, 162)']  \r\nor\r\n ['#66c2a5', '#fc8d62', '#8da0cb']"
      }
    }
  }
}